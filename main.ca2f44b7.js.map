{"version":3,"sources":["node_modules/@babel/runtime/helpers/setPrototypeOf.js","node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","node_modules/@babel/runtime/helpers/construct.js","node_modules/@babel/runtime/helpers/arrayLikeToArray.js","node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","node_modules/@babel/runtime/helpers/iterableToArray.js","node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","node_modules/@babel/runtime/helpers/nonIterableSpread.js","node_modules/@babel/runtime/helpers/toConsumableArray.js","node_modules/regenerator-runtime/runtime.js","node_modules/@babel/runtime/regenerator/index.js","node_modules/@babel/runtime/helpers/asyncToGenerator.js","node_modules/@babel/runtime/helpers/classCallCheck.js","source/point.ts","source/config.ts","source/hex.ts","source/utils.ts","source/mapProvider.ts","node_modules/@babel/runtime/helpers/arrayWithHoles.js","node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","node_modules/@babel/runtime/helpers/nonIterableRest.js","node_modules/@babel/runtime/helpers/slicedToArray.js","source/viewCapabilities.ts","source/main.ts"],"names":[],"mappings":"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","file":"main.ca2f44b7.js","sourceRoot":"..","sourcesContent":["function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","export class Point {\r\n    x: number\r\n    y: number\r\n    z: number\r\n\r\n    constructor(x: number, y: number, z: number = 0) {\r\n        this.x = x\r\n        this.y = y\r\n        this.z = z\r\n    }\r\n\r\n    public toString = () => `${this.x}, ${this.y}`\r\n\r\n    public valueOf = () => `${this.x}, ${this.y}`\r\n\r\n    public translate = (vector: Point) => new Point(this.x + vector.x, this.y + vector.y, this.z + vector.z)\r\n\r\n    public multiply = (scalar: number) => new Point(this.x * scalar, this.y * scalar, this.z * scalar)\r\n\r\n    public map = (mapper: (coord: number) => number) => new Point(mapper(this.x), mapper(this.y), mapper(this.z))\r\n\r\n    public distance2D = (other: Point) => (Math.abs(this.x - other.x) + Math.abs(this.y - other.y) + Math.abs(this.x + this.y - other.x - other.y)) / 2\r\n\r\n    public distance3D = (other: Point) => this.distance2D(other) + Math.abs(this.z - other.z)\r\n}","import { Point } from \"./point\"\r\n\r\nconst SIZE = 40\r\n\r\nexport const CONFIG = {\r\n    CHUNK_SIZE: 5,\r\n    RENDER_DISTANCE: 3,\r\n    HEX_SIZE: SIZE,\r\n    ORIGIN_POINT: new Point(0, 0),\r\n    X_VERSOR: new Point(SIZE * Math.sqrt(3), 0),\r\n    Y_VERSOR: new Point(SIZE * Math.sqrt(3) / 2, SIZE * 3 / 2),\r\n}","import { CONFIG } from \"./config\"\r\nimport { Point } from \"./point\"\r\n\r\nexport class Hex {\r\n    public position: Point\r\n    public chunkPosition: Point\r\n    public gameObjects: any[]\r\n\r\n    constructor(x: number, y: number, z: number, gameObjects: any[] = []) {\r\n        this.position = new Point(x, y, z)\r\n        this.chunkPosition = this.position.map(coord => Math.floor(coord / CONFIG.CHUNK_SIZE))\r\n        this.gameObjects = gameObjects\r\n    }\r\n\r\n    public draw = () => {\r\n        const center = CONFIG.ORIGIN_POINT\r\n            .translate(CONFIG.X_VERSOR.multiply(this.position.x))\r\n            .translate(CONFIG.Y_VERSOR.multiply(this.position.y))\r\n        const points = this.hexPoints(center, CONFIG.HEX_SIZE)\r\n\r\n        const g = document.createElementNS(\"http://www.w3.org/2000/svg\", 'g')\r\n        g.id = this.position.toString()\r\n        g.innerHTML = `\r\n            <polygon points=\"${points.join(' ')}\">\r\n                <title>${JSON.stringify(this, null, 4)}</title>\r\n            </polygon>\r\n            <text x=\"${center.x}\" y=\"${center.y}\" text-anchor=\"middle\">${this.position.distance2D(new Point(0, 0, 0))}</text>\r\n            <text x=\"${center.x}\" y=\"${center.y + 18}\" text-anchor=\"middle\" style=\"font-size:10px;fill:gray\">(${this.position})</text>\r\n        `\r\n        return g\r\n    }\r\n\r\n    private hexPoints = (center: Point, size: number) => {\r\n        return [...Array(6)].map((e, i) => {\r\n            const angle_deg = 60 * i - 30\r\n            const angle_rad = Math.PI / 180 * angle_deg\r\n            return new Point(center.x + size * Math.cos(angle_rad), center.y + size * Math.sin(angle_rad))\r\n        })\r\n    }\r\n\r\n    public distance = (other: Hex) => this.position.distance2D(other.position)\r\n\r\n    public neighbours = () => [\r\n        \r\n    ]\r\n}","import { Point } from \"./point\";\r\n\r\nexport const range = (start: number, stop: number) => [...Array(stop - start)].map((e, i) => i + start)\r\nexport const unique = (element: any, index: number, array: any[]) => array.indexOf(element) === index\r\n\r\nexport const HEX_MOVE = {\r\n    RIGHT:          new Point(1, 0, 0),\r\n    LEFT:           new Point(-1, 0, 0),\r\n    UPPER_RIGHT:    new Point(1, -1, 0),\r\n    UPPER_LEFT:     new Point(0, -1, 0),\r\n    LOWER_RIGHT:    new Point(0, 1, 0),\r\n    LOWER_LEFT:     new Point(-1, 1, 0),\r\n    UP:             new Point(0, 0, 1),\r\n    DOWN:           new Point(0, 0, -1),\r\n}\r\n\r\n// loadChunk(start)\r\n// .then(draw)\r\n// .then(result => result.forEach(h => map.set(h.position.toString(), h)))\r\n// .then(() =>\r\n//     range(0, CONFIG.RENDER_DISTANCE).forEach(async d => {\r\n//         let min, max\r\n\r\n//         min = new Point(start.x - d, start.y - d)\r\n//         max = min.translate(new Point(d * 2 - 1, 0))\r\n//         await loadChunks(min, max)\r\n//         .then(draw)\r\n//         .then(result => result.forEach(h => map.set(h.position.toString(), h)))\r\n        \r\n//         min = new Point(start.x + d, start.y - d)\r\n//         max = min.translate(new Point(0, d * 2 - 1))\r\n//         await loadChunks(min, max)\r\n//         .then(draw)\r\n//         .then(result => result.forEach(h => map.set(h.position.toString(), h)))\r\n\r\n//         max = new Point(start.x + d, start.y + d)\r\n//         min = max.translate(new Point(- d * 2 + 1, 0))\r\n//         await loadChunks(min, max)\r\n//         .then(draw)\r\n//         .then(result => result.forEach(h => map.set(h.position.toString(), h)))\r\n\r\n//         max = new Point(start.x - d, start.y + d)\r\n//         min = max.translate(new Point(0, - d * 2 + 1))\r\n//         await loadChunks(min, max)\r\n//         .then(draw)\r\n//         .then(result => result.forEach(h => map.set(h.position.toString(), h)))\r\n//     })\r\n// )","import { CONFIG } from \"./config\";\r\nimport { Hex } from \"./hex\";\r\nimport { Point } from \"./point\";\r\nimport { range } from \"./utils\";\r\n\r\nexport type Chunk = {\r\n    minBound: Point\r\n    maxBound: Point\r\n}\r\n\r\nconst loadedChunks = new Set<string>()\r\n\r\nexport const loadChunk = async (point: Point) => {\r\n    if (loadedChunks.has(point.toString())) {\r\n        return []\r\n    }\r\n    \r\n    const minBound = point.multiply(CONFIG.CHUNK_SIZE)\r\n    const maxBound = minBound.translate(new Point(CONFIG.CHUNK_SIZE, CONFIG.CHUNK_SIZE, 1))\r\n\r\n    loadedChunks.add(point.toString())\r\n\r\n    return range(minBound.x, maxBound.x).flatMap(x => \r\n        range(minBound.y, maxBound.y).flatMap(y => \r\n            range(minBound.z, maxBound.z).map(z => new Hex(x, y, z))\r\n        )\r\n    )\r\n}\r\n\r\nexport const unloadChunk = (point: Point) => {\r\n    loadedChunks.delete(point.toString())\r\n}\r\n","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","import { CONFIG } from \"./config\"\r\nimport { Point } from \"./point\"\r\n\r\nconst TRANSLATE_REGEXP = /translate\\(([-0-9\\.]+) ([-0-9\\.]+)\\)/\r\nconst SCALE_REGEXP = /scale\\(([-0-9\\.]+)\\)/\r\nconst ROTATE_REGEXP = /rotate\\(([-0-9\\.]+)\\)/\r\n\r\nexport const applyOriginChangeCapability = (view: Element, onOriginChange: (newOrigin: Point) => void) => {\r\n    view.addEventListener('mousedown', e => {\r\n        if ((e as MouseEvent).buttons === 2) {\r\n            view.querySelector('[selected]')?.removeAttribute('selected')\r\n            const hexElement = ((e as MouseEvent).target as Element).parentElement!\r\n            hexElement.setAttribute('selected', 'true')\r\n\r\n            let [x, y] = hexElement.id.split(', ').map(i => parseInt(i))\r\n            x = Math.floor(x / CONFIG.CHUNK_SIZE)\r\n            y = Math.floor(y / CONFIG.CHUNK_SIZE)\r\n            onOriginChange(new Point(x, y))\r\n        }\r\n    })\r\n}\r\n\r\nexport const preventContextMenuCapability = (view: Element) => {\r\n    view.addEventListener('contextmenu', e => e.preventDefault())\r\n}\r\n\r\nexport const applyPanCapability = (view: Element) => {\r\n    view.addEventListener('mousemove', e => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n\r\n        if ((e as MouseEvent).buttons === 1) {\r\n            const transform = view.attributes.getNamedItem('transform')!\r\n            const [x, y] = getTranslate(transform)\r\n\r\n            const [viewX, viewY] = view.parentElement!.getAttribute('viewBox')!.split(' ').slice(2).map(e => parseInt(e))\r\n            const screenX = view.parentElement!.getBoundingClientRect().width\r\n            const screenY = view.parentElement!.getBoundingClientRect().height\r\n            const mouseX = (e as MouseEvent).movementX * viewX / screenX\r\n            const mouseY = (e as MouseEvent).movementY * viewY / screenY\r\n            \r\n            setTranslate(transform, x + mouseX, y + mouseY)\r\n        }\r\n    })\r\n}\r\n\r\nexport const applyZoomCapability = (view: Element, minZoom: number, maxZoom: number, step: number) => {\r\n    view.addEventListener('wheel', e => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n\r\n        const transform = view.attributes.getNamedItem('transform')!\r\n        const zoom = getZoom(transform)\r\n        const deltaZoom = Math.sign((e as WheelEvent).deltaY) * step;\r\n        const newZoom = Math.min(maxZoom, Math.max(minZoom, zoom - deltaZoom))\r\n        setZoom(transform, newZoom)\r\n\r\n        const [viewX, viewY] = view.parentElement!.getAttribute('viewBox')!.split(' ').slice(2).map(e => parseInt(e))\r\n        const screenX = view.parentElement!.getBoundingClientRect().width\r\n        const screenY = view.parentElement!.getBoundingClientRect().height\r\n        const mouseX = (e as WheelEvent).x * viewX / screenX\r\n        const mouseY = (e as WheelEvent).y * viewY / screenY\r\n\r\n        const [x, y] = getTranslate(transform)\r\n        const diffX = mouseX - x\r\n        const diffY = mouseY - y\r\n        setTranslate(transform, x + diffX * (zoom - newZoom) / zoom, y + diffY * (zoom - newZoom) / zoom)\r\n    })\r\n}\r\n\r\nexport const applyRotateCapability = (view: Element) => {\r\n    view.addEventListener('mousedown', e => {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n\r\n        if ((e as MouseEvent).buttons === 4) {\r\n            const transform = view.attributes.getNamedItem('transform')!\r\n            const rotate = getRotate(transform)\r\n            setRotate(transform, rotate + 45)\r\n        }\r\n    })\r\n}\r\n\r\nfunction getTranslate(transform: Attr): [number, number] {\r\n    return transform.value.match(TRANSLATE_REGEXP)!.slice(1).map(s => parseInt(s)) as [number, number]\r\n}\r\n\r\nfunction setTranslate(transform: Attr, x: number, y: number) {\r\n    const translate = `translate(${x} ${y})`\r\n    transform.value = transform.value.replace(TRANSLATE_REGEXP, translate)\r\n}\r\n\r\nfunction getZoom(transform: Attr) {\r\n    return parseFloat(transform.value.match(SCALE_REGEXP)![1])\r\n}\r\n\r\nfunction setZoom(transform: Attr, zoom: number) {\r\n    const scale = `scale(${zoom})`\r\n    transform.value = transform.value.replace(SCALE_REGEXP, scale)\r\n}\r\n\r\nfunction getRotate(transform: Attr) {\r\n    return parseFloat(transform.value.match(ROTATE_REGEXP)![1])\r\n}\r\n\r\nfunction setRotate(transform: Attr, deg: number) {\r\n    const rotate = `rotate(${deg})`\r\n    transform.value = transform.value.replace(ROTATE_REGEXP, rotate)\r\n}\r\n","import { CONFIG } from \"./config\"\r\nimport { Hex } from \"./hex\"\r\nimport { loadChunk, unloadChunk } from \"./mapProvider\"\r\nimport { Point } from \"./point\"\r\nimport { range, unique } from \"./utils\"\r\nimport { applyOriginChangeCapability, applyPanCapability, applyRotateCapability, applyZoomCapability, preventContextMenuCapability } from \"./viewCapabilities\"\r\n\r\nconst map = new Map<string, Hex>()\r\nconst view = document.querySelector('#view')!\r\n\r\npreventContextMenuCapability(view)\r\napplyPanCapability(view)\r\napplyZoomCapability(view, 0.2, 1.2, 0.05)\r\napplyRotateCapability(view)\r\napplyOriginChangeCapability(view, async newOrigin => {\r\n    await loadIntoMap(newOrigin)\r\n    await unloadFromMap(newOrigin)\r\n})\r\n\r\n\r\nloadIntoMap(CONFIG.ORIGIN_POINT)\r\n\r\n\r\nfunction loadIntoMap(origin: Point) {\r\n    const chunkGroup = document.createDocumentFragment()\r\n    return Promise.all(\r\n        range(origin.x - CONFIG.RENDER_DISTANCE, origin.x + CONFIG.RENDER_DISTANCE + 1)\r\n        .flatMap(x => range(origin.y - CONFIG.RENDER_DISTANCE, origin.y + CONFIG.RENDER_DISTANCE + 1).map(y => new Point(x, y)))\r\n        .filter(chunk => chunk.distance3D(origin) <= CONFIG.RENDER_DISTANCE)\r\n        .sort((p1, p2) => p1.distance3D(origin) - p2.distance3D(origin))\r\n        .map(async chunkPosition => {\r\n            const result = await loadChunk(chunkPosition)\r\n            if (result.length !== 0) {\r\n                result.forEach(h => map.set(h.position.toString(), h))\r\n    \r\n                const chunk = document.createElementNS(\"http://www.w3.org/2000/svg\", 'g')\r\n                chunk.id = `chunk ${chunkPosition}`\r\n                chunk.append(...result.map(h => h.draw()))\r\n                \r\n                chunkGroup.append(chunk)\r\n            }\r\n        })\r\n    ).then(() => view.append(chunkGroup))\r\n}\r\n\r\nfunction unloadFromMap(origin: Point) {\r\n    return Promise.all(\r\n        [...map.values()]\r\n        .filter(hex => hex.chunkPosition.distance3D(origin) > CONFIG.RENDER_DISTANCE * 2)\r\n        .map(hex => {\r\n            const id = hex.position.toString()\r\n            map.delete(id)\r\n            return 'chunk ' + hex.chunkPosition\r\n        })\r\n        .filter(unique)\r\n        .map(chunkId => {\r\n            console.log(chunkId)\r\n            view.querySelector('#' + CSS.escape(chunkId))!.remove()\r\n            const chunk = new Point(...chunkId\r\n                .slice(6)\r\n                .split(', ')\r\n                .map(i => parseInt(i)) as [number, number])\r\n            unloadChunk(chunk)\r\n        })\r\n    )\r\n}"]}